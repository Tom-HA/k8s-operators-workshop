---
name: Build Container Image

on:
  workflow_dispatch:

  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SEM_VER: "0.1.0"
  PROJ_NAME: sample-pg-app

jobs:
  Package-Container:
    name: Build a Docker/OCI image
    runs-on: ubuntu-latest
    needs: [Test_Code]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set variables
        id: vars
        shell: bash
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            export commit_sha=${{ github.event.pull_request.head.sha }}
          else
            export commit_sha=${{ github.sha }}
          fi
          export version=$(echo ${SEM_VER}-${commit_sha:0:7})

          if [[ -z "${{ github.head_ref }}" ]]; then
            export "head_ref=main"
          else
            export "head_ref=${{ github.head_ref }}"
          fi

          export repo_slug=$(echo ${GITHUB_REPOSITORY,,})

          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "HEAD_REF=${head_ref}" >> $GITHUB_ENV
          echo "REPO_SLUG=ghcr.io/${repo_slug}" >> $GITHUB_ENV
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REPO_SLUG }}/${{ env.HEAD_REF }}/${{ env.PROJ_NAME }}:latest
            ${{ env.REPO_SLUG }}/${{ env.HEAD_REF }}/${{ env.PROJ_NAME }}:${{ env.VERSION }}
          cache-from: type=registry,ref=${{ env.REPO_SLUG }}/${{ env.HEAD_REF }}/${{ env.PROJ_NAME }}:cache
          cache-to: type=registry,ref=${{ env.REPO_SLUG }}/${{ env.HEAD_REF }}/${{ env.PROJ_NAME }}:cache,mode=max